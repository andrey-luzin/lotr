@import "../../assets/styles/variables";
@import "../../assets/styles/mixins";

.card {
  $root: &;

  height: rem($size-card-height);
  margin-right: rem(10px);
  position: relative;
  z-index: auto;

  &:last-child {
    margin-right: 0;
  }

  &--isClosed {
    cursor: default;
  }

  &--isUp,
  &--isDown,
  &--isChecked,
  &--isCounted {
    @extend %before;
    
    &:before {
      background-color: $color-gray-2;
      border-radius: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      bottom: rem(-6px);
      width: rem(36px);
      height: rem(36px);
      font-size: rem(20px);
      font-weight: 700;
      border: rem(2px) solid $color-burnt-sienna;
      box-sizing: border-box;
      content: attr(data-tokens);
    }
  }

  &--isCounted {
    &:before {
      left: rem(-6px);
      content: attr(data-tokens);
    }
  }

  &--isUp,
  &--isDown,
  &--isChecked {
    @extend %before;
    &:before {
      right: rem(-6px);
      background-position: 50% 50%;
      background-size: rem(20px);
      background-repeat: no-repeat;
    }
  }

  &--isUp {
    &::before {
      transform: scaleY(-1);
      background-image: url('../../assets/imgs/direction-arrow.svg');
    }
  }

  &--isDown {
    &::before {
      background-image: url('../../assets/imgs/direction-arrow.svg');
      border-color: $color-alert;
    }
  }

  &--isChecked {
    &:before {
      background-image: url('../../assets/imgs/checked.svg');
      border-color: $color-picton-blue;
    }
  }

  &:not(&--isActive) {
    cursor: pointer;
  }

  &__wrapper {
    max-height: 100%;
  }

  &__inside {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($color-dark, .5);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: rem(4px);
    box-sizing: border-box;
    opacity: 0;
    visibility: hidden;
    @include transition;
    z-index: $z-default + 1;
    overflow: hidden;
  }

  &:hover,
  &:focus {
    #{$root}__inside {
      opacity: 1;
      visibility: visible;
    }
  }
}